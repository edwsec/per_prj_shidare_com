{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/Shared/edwsec/Documents/dev/microblog-simple/src/lib/posts.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nimport { remark } from 'remark';\nimport html from 'remark-html';\nimport { Post } from '@/types/post';\n\nconst postsDirectory = path.join(process.cwd(), 'posts');\nconst sectionsDirectory = path.join(process.cwd(), 'sections');\n\nexport function getAllPosts(): Post[] {\n  // Obtener nombres de archivos de la carpeta posts\n  const fileNames = fs.readdirSync(postsDirectory);\n  \n  const allPostsData = fileNames\n    .filter((fileName) => fileName.endsWith('.md'))\n    .map((fileName) => {\n      // Remover \".md\" del nombre del archivo para obtener el slug\n      const slug = fileName.replace(/\\.md$/, '');\n\n      // Leer el archivo markdown como string\n      const fullPath = path.join(postsDirectory, fileName);\n      const fileContents = fs.readFileSync(fullPath, 'utf8');\n\n      // Usar gray-matter para parsear el frontmatter del post\n      const matterResult = matter(fileContents);\n\n      // Combinar los datos con el slug\n      return {\n        slug,\n        title: matterResult.data.title,\n        date: matterResult.data.date,\n        content: matterResult.content,\n        excerpt: matterResult.data.excerpt,\n      };\n    });\n\n  // Ordenar posts por fecha y hora de creación (más recientes primero)\n  return allPostsData.sort((a, b) => {\n    const dateA = new Date(a.date);\n    const dateB = new Date(b.date);\n    \n    if (dateA < dateB) {\n      return 1;\n    } else if (dateA > dateB) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n}\n\nexport function getPostsWithPagination(page: number = 1, limit: number = 8): { posts: Post[], totalPosts: number, totalPages: number, currentPage: number } {\n  const allPosts = getAllPosts();\n  const totalPosts = allPosts.length;\n  const totalPages = Math.ceil(totalPosts / limit);\n  const startIndex = (page - 1) * limit;\n  const endIndex = startIndex + limit;\n  const posts = allPosts.slice(startIndex, endIndex);\n\n  return {\n    posts,\n    totalPosts,\n    totalPages,\n    currentPage: page\n  };\n}\n\nexport function getPostBySlug(slug: string): Post | null {\n  try {\n    const fullPath = path.join(postsDirectory, `${slug}.md`);\n    const fileContents = fs.readFileSync(fullPath, 'utf8');\n\n    // Usar gray-matter para parsear el frontmatter del post\n    const matterResult = matter(fileContents);\n\n    // Usar remark para convertir markdown a HTML\n    const processedContent = remark()\n      .use(html)\n      .processSync(matterResult.content);\n    const contentHtml = processedContent.toString();\n\n    // Combinar los datos con el slug y el contenido HTML\n    return {\n      slug,\n      title: matterResult.data.title,\n      date: matterResult.data.date,\n      content: contentHtml,\n      excerpt: matterResult.data.excerpt,\n    };\n  } catch {\n    return null;\n  }\n}\n\nexport function getAllPostSlugs(): string[] {\n  const fileNames = fs.readdirSync(postsDirectory);\n  return fileNames\n    .filter((fileName) => fileName.endsWith('.md'))\n    .map((fileName) => fileName.replace(/\\.md$/, ''));\n}\n\n// Section functions\nexport function getSectionBySlug(slug: string): { title: string; content: string } | null {\n  try {\n    const fullPath = path.join(sectionsDirectory, `${slug}.md`);\n    const fileContents = fs.readFileSync(fullPath, 'utf8');\n\n    // Usar gray-matter para parsear el frontmatter del post\n    const matterResult = matter(fileContents);\n\n    // Usar remark para convertir markdown a HTML\n    const processedContent = remark()\n      .use(html)\n      .processSync(matterResult.content);\n    const contentHtml = processedContent.toString();\n\n    // Combinar los datos con el slug y el contenido HTML\n    return {\n      title: matterResult.data.title,\n      content: contentHtml,\n    };\n  } catch {\n    return null;\n  }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///Users/Shared/edwsec/Documents/dev/microblog-simple/src/app/page.tsx"],"sourcesContent":["import Link from 'next/link';\nimport { getPostsWithPagination } from '@/lib/posts';\nimport { format } from 'date-fns';\nimport { enUS } from 'date-fns/locale';\n\nexport default function Home() {\n  // Para exportación estática, siempre usar página 1\n  const currentPage = 1;\n  const { posts, totalPosts, totalPages, currentPage: page } = getPostsWithPagination(currentPage, 8);\n\n  return (\n    <div className=\"min-h-screen\" style={{ background: '#ffffff' }}>\n      <div className=\"w-full mx-auto px-6 py-12\">\n        {/* Header */}\n        <header className=\"mb-16\">\n          <h1 className=\"text-3xl font-bold mb-6\" style={{ color: '#000000' }}>\n            ;-- section.0.__TEXT.__main:\n          </h1>\n          <p className=\"text-lg\" style={{ color: '#666666' }}>\n            Thoughts, ideas and personal reflections\n          </p>\n        </header>\n\n        {/* Posts List */}\n        <main>\n          {posts.length === 0 ? (\n            <div className=\"text-center py-20\">\n              <div className=\"w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\" style={{ backgroundColor: '#f8f9fa' }}>\n                <svg className=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" style={{ color: '#666666' }}>\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\" style={{ color: '#000000' }}>\n                No hay posts aún\n              </h3>\n              <p style={{ color: '#666666' }}>\n                ¡Pronto habrá contenido aquí!\n              </p>\n            </div>\n          ) : (\n            <>\n              <div className=\"space-y-0\">\n                {posts.map((post) => (\n                  <Link key={post.slug} href={`/posts/${post.slug}`} className=\"block\">\n                    <article className=\"post-item\">\n                      <h2 className=\"post-title\">{post.title}</h2>\n                      <time className=\"post-date\">\n                        {format(new Date(post.date), 'dd MMM yyyy HH:mm', { locale: enUS })}\n                      </time>\n                    </article>\n                  </Link>\n                ))}\n              </div>\n\n              {/* Pagination */}\n              {totalPages > 1 && (\n                <div className=\"mt-8 flex justify-center items-center space-x-4\">\n                  {page > 1 && (\n                    <Link \n                      href={`/?page=${page - 1}`}\n                      className=\"px-4 py-2 rounded transition-colors\"\n                      style={{ \n                        color: '#059669', \n                        border: '1px solid #059669',\n                        backgroundColor: 'transparent'\n                      }}\n                    >\n                      ← Previous\n                    </Link>\n                  )}\n                  \n                  <span className=\"text-sm\" style={{ color: '#666666' }}>\n                    Page {page} of {totalPages} ({totalPosts} posts)\n                  </span>\n                  \n                  {page < totalPages && (\n                    <Link \n                      href={`/?page=${page + 1}`}\n                      className=\"px-4 py-2 rounded transition-colors\"\n                      style={{ \n                        color: '#059669', \n                        border: '1px solid #059669',\n                        backgroundColor: 'transparent'\n                      }}\n                    >\n                      Next →\n                    </Link>\n                  )}\n                </div>\n              )}\n            </>\n          )}\n        </main>\n\n        {/* Footer */}\n        <footer className=\"mt-24 pt-8\" style={{ borderTop: '1px solid #e1e5e9' }}>\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center\">\n            <p className=\"text-sm mb-4 md:mb-0\" style={{ color: '#666666' }}>\n              © 2004-{new Date().getFullYear()} shidare.com. Made with Next.js and Markdown.\n            </p>\n            <div className=\"flex space-x-6\">\n              <span className=\"text-sm\" style={{ color: '#666666' }}>\n                {totalPosts} posts\n              </span>\n            </div>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS;IACtB,mDAAmD;IACnD,MAAM,cAAc;IACpB,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,aAAa,IAAI,EAAE,GAAG,CAAA,GAAA,mHAAA,CAAA,yBAAsB,AAAD,EAAE,aAAa;IAEjG,qBACE,8OAAC;QAAI,WAAU;QAAe,OAAO;YAAE,YAAY;QAAU;kBAC3D,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAO,WAAU;;sCAChB,8OAAC;4BAAG,WAAU;4BAA0B,OAAO;gCAAE,OAAO;4BAAU;sCAAG;;;;;;sCAGrE,8OAAC;4BAAE,WAAU;4BAAU,OAAO;gCAAE,OAAO;4BAAU;sCAAG;;;;;;;;;;;;8BAMtD,8OAAC;8BACE,MAAM,MAAM,KAAK,kBAChB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;gCAAuE,OAAO;oCAAE,iBAAiB;gCAAU;0CACxH,cAAA,8OAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,SAAQ;oCAAY,QAAO;oCAAe,OAAO;wCAAE,OAAO;oCAAU;8CACvG,cAAA,8OAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;;;;;;0CAGzE,8OAAC;gCAAG,WAAU;gCAA6B,OAAO;oCAAE,OAAO;gCAAU;0CAAG;;;;;;0CAGxE,8OAAC;gCAAE,OAAO;oCAAE,OAAO;gCAAU;0CAAG;;;;;;;;;;;6CAKlC;;0CACE,8OAAC;gCAAI,WAAU;0CACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,4JAAA,CAAA,UAAI;wCAAiB,MAAM,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;wCAAE,WAAU;kDAC3D,cAAA,8OAAC;4CAAQ,WAAU;;8DACjB,8OAAC;oDAAG,WAAU;8DAAc,KAAK,KAAK;;;;;;8DACtC,8OAAC;oDAAK,WAAU;8DACb,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,KAAK,IAAI,GAAG,qBAAqB;wDAAE,QAAQ,iJAAA,CAAA,OAAI;oDAAC;;;;;;;;;;;;uCAJ5D,KAAK,IAAI;;;;;;;;;;4BAYvB,aAAa,mBACZ,8OAAC;gCAAI,WAAU;;oCACZ,OAAO,mBACN,8OAAC,4JAAA,CAAA,UAAI;wCACH,MAAM,CAAC,OAAO,EAAE,OAAO,GAAG;wCAC1B,WAAU;wCACV,OAAO;4CACL,OAAO;4CACP,QAAQ;4CACR,iBAAiB;wCACnB;kDACD;;;;;;kDAKH,8OAAC;wCAAK,WAAU;wCAAU,OAAO;4CAAE,OAAO;wCAAU;;4CAAG;4CAC/C;4CAAK;4CAAK;4CAAW;4CAAG;4CAAW;;;;;;;oCAG1C,OAAO,4BACN,8OAAC,4JAAA,CAAA,UAAI;wCACH,MAAM,CAAC,OAAO,EAAE,OAAO,GAAG;wCAC1B,WAAU;wCACV,OAAO;4CACL,OAAO;4CACP,QAAQ;4CACR,iBAAiB;wCACnB;kDACD;;;;;;;;;;;;;;;;;;;8BAWb,8OAAC;oBAAO,WAAU;oBAAa,OAAO;wBAAE,WAAW;oBAAoB;8BACrE,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;gCAAuB,OAAO;oCAAE,OAAO;gCAAU;;oCAAG;oCACvD,IAAI,OAAO,WAAW;oCAAG;;;;;;;0CAEnC,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAK,WAAU;oCAAU,OAAO;wCAAE,OAAO;oCAAU;;wCACjD;wCAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ5B","debugId":null}}]
}